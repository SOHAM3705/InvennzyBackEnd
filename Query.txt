CREATE TABLE Admin (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(100) UNIQUE,
  password VARCHAR(255)
);

CREATE TABLE LabIncharge (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(100) UNIQUE,
  password VARCHAR(255)
);

CREATE TABLE LabAssistant (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100),
  email VARCHAR(100) UNIQUE,
  password VARCHAR(255)
);

ALTER TABLE Admin ADD COLUMN google_id VARCHAR(255) NULL;
ALTER TABLE Admin ADD COLUMN profile_picture VARCHAR(500) NULL;

ALTER TABLE LabIncharge ADD COLUMN google_id VARCHAR(255) NULL;
ALTER TABLE LabIncharge ADD COLUMN profile_picture VARCHAR(500) NULL;

ALTER TABLE LabAssistant ADD COLUMN google_id VARCHAR(255) NULL;
ALTER TABLE LabAssistant ADD COLUMN profile_picture VARCHAR(500) NULL;

USE invennzy;

-- Create labs table
CREATE TABLE labs (
    id SERIAL PRIMARY KEY,
    lab_no VARCHAR(50) UNIQUE NOT NULL,
    lab_name VARCHAR(255) NOT NULL,
    building VARCHAR(100) NOT NULL,
    floor VARCHAR(50) NOT NULL,
    capacity INTEGER DEFAULT 0,
    status VARCHAR(20) DEFAULT 'active' CHECK (status IN ('active', 'maintenance', 'inactive')),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create equipment table
CREATE TABLE equipment (
    id SERIAL PRIMARY KEY,
    lab_id INTEGER REFERENCES labs(id) ON DELETE CASCADE,
    monitors INTEGER DEFAULT 0,
    projectors INTEGER DEFAULT 0,
    switch_boards INTEGER DEFAULT 0,
    fans INTEGER DEFAULT 0,
    wifi INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create staff table
CREATE TABLE staff (
    id SERIAL PRIMARY KEY,
    lab_id INTEGER REFERENCES labs(id) ON DELETE CASCADE,
    incharge_name VARCHAR(255),
    incharge_email VARCHAR(255),
    incharge_phone VARCHAR(20),
    assistant_name VARCHAR(255),
    assistant_email VARCHAR(255),
    assistant_phone VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX idx_labs_lab_no ON labs(lab_no);
CREATE INDEX idx_labs_building ON labs(building);
CREATE INDEX idx_labs_status ON labs(status);
CREATE INDEX idx_equipment_lab_id ON equipment(lab_id);
CREATE INDEX idx_staff_lab_id ON staff(lab_id);

-- Insert sample data
INSERT INTO labs (lab_no, lab_name, building, floor, capacity, status) VALUES
('LAB001', 'Computer Science Lab 1', 'Main Building', 'Ground Floor', 30, 'active'),
('LAB002', 'Physics Lab', 'Science Block', 'First Floor', 25, 'active'),
('LAB003', 'Chemistry Lab', 'Science Block', 'Second Floor', 20, 'maintenance');

INSERT INTO equipment (lab_id, monitors, projectors, switch_boards, fans, wifi) VALUES
(1, 30, 1, 4, 6, 2),
(2, 0, 1, 2, 4, 1),
(3, 0, 1, 3, 5, 1);

INSERT INTO staff (lab_id, incharge_name, incharge_email, incharge_phone, assistant_name, assistant_email, assistant_phone) VALUES
(1, 'Dr. John Smith', 'john.smith@college.edu', '+1-555-0101', 'Alice Johnson', 'alice.johnson@college.edu', '+1-555-0102'),
(2, 'Prof. Sarah Wilson', 'sarah.wilson@college.edu', '+1-555-0201', 'Bob Brown', 'bob.brown@college.edu', '+1-555-0202'),
(3, 'Dr. Mike Davis', 'mike.davis@college.edu', '+1-555-0301', 'Carol White', 'carol.white@college.edu','+1-555-0302');


ALTER TABLE admin
ADD COLUMN phone VARCHAR(15) NULL,
ADD COLUMN department VARCHAR(100) NULL,
ADD COLUMN role VARCHAR(50) NULL,
ADD COLUMN notify_email BOOLEAN DEFAULT TRUE,
ADD COLUMN notify_push BOOLEAN DEFAULT FALSE,
ADD COLUMN notify_sms BOOLEAN DEFAULT TRUE;
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

ALTER TABLE labincharge
ADD COLUMN phone VARCHAR(15) NULL,
ADD COLUMN department VARCHAR(100) NULL,
ADD COLUMN role VARCHAR(50) NULL,
ADD COLUMN staff_id BIGINT NULL,
ADD COLUMN notify_email BOOLEAN DEFAULT TRUE,
ADD COLUMN notify_push BOOLEAN DEFAULT FALSE,
ADD COLUMN notify_sms BOOLEAN DEFAULT TRUE;
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

ALTER TABLE labassistant
ADD COLUMN phone VARCHAR(15) NULL,
ADD COLUMN department VARCHAR(100) NULL,
ADD COLUMN role VARCHAR(50) NULL,
ADD COLUMN staff_id BIGINT NULL,
ADD COLUMN notify_email BOOLEAN DEFAULT TRUE,
ADD COLUMN notify_push BOOLEAN DEFAULT FALSE,
ADD COLUMN notify_sms BOOLEAN DEFAULT TRUE;
ADD COLUMN created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
ADD COLUMN updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

ALTER TABLE admin
ADD COLUMN profile_picture TEXT;

ALTER TABLE labincharge
ADD COLUMN staff_id BIGINT UNSIGNED;

ALTER TABLE labincharge
ADD CONSTRAINT fk_staff_id_labincharges
FOREIGN KEY (staff_id) REFERENCES staff(id)
ON DELETE CASCADE;

ALTER TABLE labassistant
ADD COLUMN staff_id BIGINT UNSIGNED;

ALTER TABLE labassistant
ADD CONSTRAINT fk_staff_id_labassistant
FOREIGN KEY (staff_id) REFERENCES staff(id)
ON DELETE CASCADE;

ALTER TABLE `invennzy`.`labs` 
ADD COLUMN `admin_id` VARCHAR(255) NOT NULL AFTER `last_updated`;

ALTER TABLE `invennzy`.`admin` 
CHANGE COLUMN `profile_picture` `profile_picture` LONGBLOB NULL DEFAULT NULL ;

ALTER TABLE `invennzy`.`labassistant` 
CHANGE COLUMN `profile_picture` `profile_picture` LONGBLOB NULL DEFAULT NULL ;
ALTER TABLE `invennzy`.`labincharge` 
CHANGE COLUMN `profile_picture` `profile_picture` LONGBLOB NULL DEFAULT NULL ;

CREATE TABLE requests (
  id INT AUTO_INCREMENT PRIMARY KEY,
  type_of_problem VARCHAR(255),
  date DATE,
  department VARCHAR(255),
  location VARCHAR(255),
  complaint_details TEXT,
  recurring_complaint ENUM('yes', 'no'),
  recurring_times INT,
  lab_assistant VARCHAR(255),
  lab_assistant_date DATE,
  hod VARCHAR(255),
  hod_date DATE,
  current_step INT DEFAULT 1,
  completed_steps INT DEFAULT 0,
  created_by VARCHAR(255)
);


CREATE TABLE notifications (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_role ENUM('labincharge', 'labassistant'),
  type ENUM('info', 'alert', 'maintenance'),
  title VARCHAR(255),
  message TEXT,
  is_read BOOLEAN DEFAULT FALSE,
  request_id INT,
  timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE requests ADD COLUMN staff_id BIGINT UNSIGNED;

ALTER TABLE requests
ADD CONSTRAINT fk_staff_id_requests
FOREIGN KEY (staff_id) REFERENCES staff(id)
ON DELETE SET NULL;

CREATE TABLE `invennzy`.`equipment_details` (
  `equipment_id` INT NOT NULL AUTO_INCREMENT,
  `lab_id` BIGINT NOT NULL,
  `staff_id` BIGINT NULL,
  `equipment_type` ENUM('monitor', 'projector', 'switch_board', 'wifi', 'fan') NOT NULL,
  `equipment_name` VARCHAR(100) NOT NULL,
  `equipment_code` VARCHAR(100) NOT NULL UNIQUE,
  `equipment_status` ENUM('0', '1', '2') NOT NULL DEFAULT '0', -- 0=working, 1=maintenance, 2=damaged
  `equipment_password` VARCHAR(100) NULL,
  `equipment_description` MEDIUMTEXT NULL,
  PRIMARY KEY (`equipment_id`)
);

ALTER TABLE requests
-- Step 3: Verification stage
ADD COLUMN in_charge_date DATE,
ADD COLUMN in_charge_signature VARCHAR(255),
ADD COLUMN assigned_person VARCHAR(255),
ADD COLUMN verification_remarks TEXT,

-- Step 4: Corrective action
ADD COLUMN materials_used TEXT,
ADD COLUMN resolved_inhouse ENUM('yes', 'no') DEFAULT 'yes',
ADD COLUMN resolved_remark TEXT,
ADD COLUMN consumables_needed ENUM('yes', 'no') DEFAULT 'no',
ADD COLUMN consumable_details TEXT,
ADD COLUMN external_agency_needed ENUM('yes', 'no') DEFAULT 'no',
ADD COLUMN agency_name VARCHAR(255),
ADD COLUMN approx_expenditure DECIMAL(10,2),

-- Step 5: Closure
ADD COLUMN completion_remark_lab TEXT,
ADD COLUMN lab_completion_name VARCHAR(255),
ADD COLUMN lab_completion_signature VARCHAR(255),
ADD COLUMN lab_completion_date DATE,
ADD COLUMN completion_remark_maintenance TEXT,
ADD COLUMN maintenance_closed_date DATE,
ADD COLUMN maintenance_closed_signature VARCHAR(255);

ALTER TABLE requests
ADD COLUMN equipment_id INT NOT NULL AFTER staff_id;

ALTER TABLE `invennzy`.`requests` 
ADD COLUMN `equipment_status` ENUM('0', '1', '2') NULL DEFAULT '1' AFTER `equipment_id`;


CREATE TABLE dead_stock_requirements (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    deadstock_id INT,
    po_no VARCHAR(255) DEFAULT NULL,
    purchase_year VARCHAR(255) NOT NULL,
    equipment_name VARCHAR(255) NOT NULL,
    ds_number VARCHAR(255) NOT NULL UNIQUE,
    quantity INT NOT NULL,
    unit_rate DECIMAL(10,2) NOT NULL,
    cost DECIMAL(12,2) NOT NULL,
    remark TEXT DEFAULT NULL,
    date_submitted TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    staff_id INT DEFAULT NULL,
    status ENUM('approved', 'rejected', 'pending') DEFAULT NULL
);

ALTER TABLE dead_stock_requirements
DROP COLUMN status,
ADD COLUMN gst_rate DECIMAL(5,2) NOT NULL DEFAULT 0,
ADD COLUMN subtotal_excl_gst DECIMAL(10,2) NOT NULL DEFAULT 0,
ADD COLUMN gst_amount DECIMAL(10,2) NOT NULL DEFAULT 0,
ADD COLUMN total_incl_gst DECIMAL(10,2) NOT NULL DEFAULT 0;

ALTER TABLE equipment ADD COLUMN others INT DEFAULT 0;

ALTER TABLE equipment_details
DROP COLUMN equipment_description,
ADD COLUMN company_name VARCHAR(255) NULL,
ADD COLUMN specification TEXT NULL;
ADD COLUMN current_location VARCHAR(255) NULL;

ALTER TABLE dead_stock_requirements
ADD COLUMN lab_id BIGINT UNSIGNED NULL AFTER staff_id;
ADD CONSTRAINT fk_deadstock_lab
FOREIGN KEY (lab_id) REFERENCES labs(id)
ON DELETE SET NULL
ON UPDATE CASCADE;